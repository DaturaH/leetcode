/*

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

*/

public class Solution {
    public boolean isValid(String s) {
   	Stack<Character> stack = new Stack<Character>();
    	for(int i = 0 ;  i < s.length() ; i++){
    		char c = s.charAt(i);
    	//	System.out.println("c:" + c);
    		if(c != ')' && c != ']' && c != '}'){
    			stack.push(c);
        	//	System.out.println("stack.push:" + c); 			
    		}else{
    			if(stack.isEmpty()){
    				return false;
    			}
    			char pre = stack.peek();
    			//System.out.println("s:" + s);
    			if(pre == '('){
    				if(c == ')'){
    					stack.pop();
    				}else{
    					return false;
    				}
    			}else if(pre == '['){
    				if(c == ']'){
    					stack.pop();
    				}else{
    					return false;
    				}
    			}else if(pre == '{'){
    				if(c == '}'){
    					stack.pop();
    				}else{
    					return false;
    				}
    			}
    		}    		
    	}
   		if(stack.isEmpty()){
			return true;
		}else{
			return false;
		}
    }
}
